{"version":3,"file":"static/js/139.4d708c0f.chunk.js","mappings":"4IAuFA,UAnC2B,WACzB,IAAAA,EAnDF,WACE,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,CACrCC,MAAO,EACPC,OAAQ,EACRC,aAAc,EACdC,YAAa,IACbC,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GALKQ,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAM1BI,GAA4CT,EAAAA,EAAAA,UAAS,CAAEU,EAAG,EAAGC,EAAG,IAAIC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAA7DI,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAClCG,GAAYC,EAAAA,EAAAA,QAAuB,MAuCzC,OArCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnB,GAAIH,EAAUI,QAAS,CACrB,IAAAC,EAAiEL,EAAUI,QAAnEhB,EAAYiB,EAAZjB,aAAcC,EAAWgB,EAAXhB,YAAaiB,EAAYD,EAAZC,aAAcC,EAAWF,EAAXE,YACjDd,EAAW,CAAEP,MAAOqB,EAAapB,OAAQmB,EAAclB,aAAAA,EAAcC,YAAAA,GACvE,CACF,EAEMmB,EAAe,WACfR,EAAUI,SACZL,EAAkB,CAChBJ,EAAGK,EAAUI,QAAQK,WACrBb,EAAGI,EAAUI,QAAQM,WAG3B,EAcA,OAZIV,EAAUI,SACZJ,EAAUI,QAAQO,iBAAiB,SAAUH,GAI/CI,OAAOD,iBAAiB,SAAUR,GAGlCA,IACAK,IAGO,WACDR,EAAUI,SACZJ,EAAUI,QAAQS,oBAAoB,SAAUL,GAElDI,OAAOC,oBAAoB,SAAUV,EACvC,CACF,GAAG,IAEI,CAAEX,QAAAA,EAASM,eAAAA,EAAgBE,UAAAA,EACpC,CAGiDc,GAAvCtB,EAAOT,EAAPS,QAASM,EAAcf,EAAde,eAAgBE,EAASjB,EAATiB,UAC3Be,GAAOC,EAAAA,EAAAA,UAAQ,WACnB,OAAO,IAAIC,MAAM,IAAIC,MAAK,GAAMC,KAAI,SAACC,EAAGC,GACtC,OAAOC,EAAAA,EAAAA,KAAA,MAAAC,SAAeF,GAANA,EAClB,GACF,GAAG,IAEH,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,KAAAC,SAAIzB,EAAeF,EAAIJ,EAAQJ,eAAiBI,EAAQL,QAAU,wBAClEmC,EAAAA,EAAAA,KAAA,KAAAC,SAAyB,IAArBzB,EAAeF,GAAW,wBAE9B4B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACG/B,EAAQL,OAAO,IAAEK,EAAQN,MAAM,IAAEM,EAAQJ,iBAE5CoC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGzB,EAAeH,EAAE,KAAGG,EAAeF,MAEtC0B,EAAAA,EAAAA,KAAA,OACEI,IAAK1B,EACL2B,MAAO,CACLzC,MAAO,IACPC,OAAQ,IACRyC,SAAU,UACVL,SAGDR,MAKT,C","sources":["pages/userMgmt/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\n\nfunction useDomSizeAndScroll() {\n  const [domSize, setDomSize] = useState({\n    width: 0,\n    height: 0,\n    clientHeight: 0,\n    clientWidth: 0\n  });\n  const [scrollPosition, setScrollPosition] = useState({ x: 0, y: 0 });\n  const targetRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (targetRef.current) {\n        const { clientHeight, clientWidth, scrollHeight, scrollWidth } = targetRef.current;\n        setDomSize({ width: scrollWidth, height: scrollHeight, clientHeight, clientWidth });\n      }\n    };\n\n    const handleScroll = () => {\n      if (targetRef.current) {\n        setScrollPosition({\n          x: targetRef.current.scrollLeft,\n          y: targetRef.current.scrollTop\n        });\n      }\n    };\n\n    if (targetRef.current) {\n      targetRef.current.addEventListener('scroll', handleScroll);\n    }\n\n    // 添加事件监听器\n    window.addEventListener('resize', handleResize);\n\n    // 初始获取DOM尺寸和滚动位置\n    handleResize();\n    handleScroll();\n\n    // 在组件卸载时移除事件监听器\n    return () => {\n      if (targetRef.current) {\n        targetRef.current.removeEventListener('scroll', handleScroll);\n      }\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return { domSize, scrollPosition, targetRef };\n}\n\nconst UserMgmt: React.FC = () => {\n  const { domSize, scrollPosition, targetRef } = useDomSizeAndScroll();\n  const list = useMemo(() => {\n    return new Array(30).fill(true).map((_, idx) => {\n      return <li key={idx}>{idx}</li>;\n    });\n  }, []);\n\n  return (\n    <div className=\"page-UserMgmt\">\n      <p>{scrollPosition.y + domSize.clientHeight === domSize.height && '到尾了'}</p>\n      <p>{scrollPosition.y === 0 && '到头了'}</p>\n\n      <div>\n        {domSize.height},{domSize.width},{domSize.clientHeight}\n      </div>\n      <div>\n        {scrollPosition.x}, {scrollPosition.y}\n      </div>\n      <div\n        ref={targetRef}\n        style={{\n          width: 200,\n          height: 100,\n          overflow: 'scroll'\n        }}\n      >\n        {/* <ul style={{ listStyle: 'none' }} className=\"mb-0\"> */}\n        {list}\n        {/* </ul> */}\n      </div>\n    </div>\n  );\n};\n\nexport default UserMgmt;\n"],"names":["_useDomSizeAndScroll","_useState","useState","width","height","clientHeight","clientWidth","_useState2","_slicedToArray","domSize","setDomSize","_useState3","x","y","_useState4","scrollPosition","setScrollPosition","targetRef","useRef","useEffect","handleResize","current","_targetRef$current","scrollHeight","scrollWidth","handleScroll","scrollLeft","scrollTop","addEventListener","window","removeEventListener","useDomSizeAndScroll","list","useMemo","Array","fill","map","_","idx","_jsx","children","_jsxs","className","ref","style","overflow"],"sourceRoot":""}